#!/bin/ash

do_mount() {
    if mount -o ro "${1}"           /boot_root; then return 0; fi
    return 1
}

do_root() {
    mkdir -p /boot_root /new_root /sys /proc || return 1
    mount -t proc  -o nodev,noexec,nosuid proc  /proc  	|| return 1
    mount -t sysfs -o nodev,noexec,nosuid sysfs /sys 	|| return 1

    # read the parameters
    read -r cmdline < /proc/cmdline
    for param in ${cmdline} ; do
        case ${param} in
            dev=*)   dev=${param#dev=};;
            label=*) label=${param#label=};;
	    hostname=*) hostname=${param#hostname=};;
    	    domain=*) domain=${param#domain=};;
        esac
    done

    # look for devices
    mount -t devtmpfs none /dev

    MOUNTARG=none
    test -n "${dev}"   && MOUNTARG=${dev}
    test -n "${label}" && MOUNTARG=LABEL=${label}

    while ! do_mount "${MOUNTARG}"
    do
        echo "Waiting for the root device"
        sleep 1
    done

    # mount the squashfs
    mkdir /new_base || return 1
    mount /boot_root/rootfs.squashfs /new_base || return 1

    # configuration
    mkdir /new_overlay || return 1
    mount -t tmpfs -o size=16M tmpfs /new_overlay || return 1
    mkdir /new_overlay/overlay || return 1
    mkdir /new_overlay/work || return 1
    mount -t overlay overlay -o rw,lowerdir=/new_base,upperdir=/new_overlay/overlay,workdir=/new_overlay/work /new_root || return 1

    # hostname
    test -n "${hostname}" && echo "${hostname}"          > /new_root/etc/hostname || return 1
    sed -i -e s+"#host-name=foo"+"host-name=${hostname}"+     /new_root/etc/avahi/avahi-daemon.conf || return 1
    sed -i -e s+"#domain-name=local"+"domain-name=${domain}"+ /new_root/etc/avahi/avahi-daemon.conf || return 1

    # moving current mounts
    mount --move /sys  	       /new_root/sys  	 || return 1
    mount --move /proc 	       /new_root/proc 	 || return 1
    mount --move /dev  	       /new_root/dev  	 || return 1

    # switch to the new root
    exec switch_root /new_root /sbin/init || return 1
}

if ! do_root
then
    echo "oooutch !"
    /bin/ash
fi
